import os
import boto3
import botocore
import json
from logger_config import logger

# Retrieve AWS credentials and region from environment variables
# aws_access_key_id = os.environ.get("AWS_ACCESS_KEY_ID")
# aws_secret_access_key = os.environ.get("AWS_SECRET_ACCESS_KEY")
# aws_region_name = os.environ.get("AWS_REGION")


async def setup_bedrock_client():
    """
    Sets up and returns a client for interacting with the Bedrock API.

    Returns:
        boto3.client: Initialized client for Bedrock API.
    Raises:
        Exception: If setup fails, raises an exception with error details.
    """
    try:
        client = boto3.client(
            service_name="bedrock-runtime",
            # aws_access_key_id=aws_access_key_id,
            # aws_secret_access_key=aws_secret_access_key,
            # region_name=aws_region_name,
        )
        logger.info("Successfully set up Bedrock client.")

        return client
    except Exception as e:
        logger.error(f"Failed to set up Bedrock client: {e}")
        raise


async def bedrock_response(prompt: str, client):
    """
    Invokes the Bedrock API to generate a response based on the given prompt.

    Args:
        prompt (str): Prompt text to send to the Bedrock API.

    Returns:
        str: Response text generated by the Bedrock API.
    Raises:
        botocore.exceptions.BotoCoreError: If there's an error while invoking the Bedrock API.
    """

    # Define the messages payload for the Bedrock API
    messages = [{"role": "user", "content": [{"type": "text", "text": prompt}]}]

    # Define the request body for the Bedrock API
    body = json.dumps(
        {
            "anthropic_version": "bedrock-2023-05-31",
            "max_tokens": 10000,
            "messages": messages,
        }
    )

    try:
        # Invoke the Bedrock API
        response = client.invoke_model(
            modelId="anthropic.claude-3-5-sonnet-20240620-v1:0",
            contentType="application/json",
            accept="application/json",
            body=body,
        )
        logger.info("Bedrock API response sucess")
    except botocore.exceptions.BotoCoreError as e:
        logger.error(f"Error invoking Bedrock API: {e}")
        raise

    # Parse the response from the Bedrock API
    response_body = json.loads(response.get("body").read())
    response_text = response_body["content"][0]["text"]

    # logger.info(f"Bedrock API response: {response_text}")

    return response_text, response_body["usage"]
